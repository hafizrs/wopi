using Microsoft.Extensions.DependencyInjection;
using Selise.Ecap.SC.PraxisMonitor.Contracts.Commands.AbsenceModule;
using Selise.Ecap.SC.PraxisMonitor.Validators;
using Selise.Ecap.SC.PraxisMonitor.Validators.AbsenceModule;
using Selise.Ecap.SC.PraxisMonitor.Validators.CirsReports;
using Selise.Ecap.SC.PraxisMonitor.Validators.ConfiguratorModule;
using Selise.Ecap.SC.PraxisMonitor.Validators.ExcelReports;

public static class ValidatorsCollectionExtensions
{
    public static void AddCommandValidator(this IServiceCollection validator)
    {
        validator.AddSingleton<ExportTaskListReportCommandValidator>();
        validator.AddSingleton<ExportOpenItemReportCommandValidator>();
        validator.AddSingleton<ExportDistinctTaskListReportCommandValidator>();
        validator.AddSingleton<UpdatePraxisTaskStatusCommandValidator>();
        validator.AddSingleton<ExportEquipmentListReportCommandValidator>();
        validator.AddSingleton<DeleteDataCommandValidator>();
        validator.AddSingleton<DeleteMultipleDataCommandValidator>();
        validator.AddSingleton<PrepareDynamicNavigationCommandValidator>();
        validator.AddSingleton<OpenOrganizationCommandValidator>();
        validator.AddSingleton<ExportCategoryReportCommandValidator>();
        validator.AddSingleton<ExportTrainingReportCommandValidator>();
        validator.AddSingleton<ExportTrainingDetailsReportCommandValidator>();
        validator.AddSingleton<ExportDeveloperReportCommandValidator>();
        validator.AddSingleton<ExportPraxisUserListReportCommandValidator>();
        validator.AddSingleton<ExportRiskOverviewReportCommandValidator>();
        validator.AddSingleton<UpdateMeasuresTakenPendingCountValidator>();
        validator.AddSingleton<PrepareClientUserForPaymentValidator>();
        validator.AddSingleton<ProcessUserCreateUpdateValidator>();
        validator.AddSingleton<ClientPaymentSubmissionCommandValidator>();
        validator.AddSingleton<UpdateClientPaymentCommandValidator>();
        validator.AddSingleton<UpdateClientSubscriptionInformationCommandValidator>();
        validator.AddSingleton<ExportProcessGuideDetailReportCommandValidator>();
        validator.AddSingleton<ExportProcessGuideReportForDeveloperCommandValidator>();
        validator.AddSingleton<ExportProcessGuideOverviewCommandValidator>();
        validator.AddSingleton<UpdateProcessGuideCompletionStatusCommandValidator>();
        validator.AddSingleton<UpdateOrgTypeChangePermissionCommandValidator>();
        validator.AddSingleton<SetLicensingSpecificationCommandValidator>();
        validator.AddSingleton<PraxisClientCustomSubscriptionCommandValidator>();
        validator.AddSingleton<UpdateCustomSubscriptionValidator>();
        validator.AddSingleton<RemoveCustomSubscriptionValidator>();
        validator.AddSingleton<SetReadPermissionForEntityCommandValidator>();
        validator.AddSingleton<GenerateDocumentUsingTemplateEngineCommandValidator>();
        validator.AddSingleton<GeneratePdfUsingTemplateEngineCommandValidator>();
        validator.AddSingleton<AssignCirsAdminsCommandValidator>();
        validator.AddSingleton<ExportCirsReportCommandValidator>();
        validator.AddSingleton<ResolveProdDataIssuesCommandValidator>();
        validator.AddSingleton<ProcessOrganizationCreateUpdateCommandValidator>();
        validator.AddSingleton<SubscriptionRenewalCommandValidator>();
        validator.AddSingleton<SubscriptionUpdateForClientCommandValidator>();
        validator.AddSingleton<SubscriptionRenewalForClientCommandValidator>();
        validator.AddSingleton<SubscriptionUpdateCommandValidator>();
        validator.AddSingleton<ObjectArtifactUpdateCommandValidator>();
        validator.AddSingleton<ObjectArtifactRenameCommandValidator>();
        validator.AddSingleton<ObjectArtifactActivationDeactivationCommandValidator>();
        validator.AddSingleton<ObjectArtifactApprovalCommandValidator>();
        validator.AddSingleton<ObjectArtifactSearchCommandValidator>();
        validator.AddSingleton<ObjectArtifactFileShareCommandValidator>();
        validator.AddSingleton<ObjectArtifactFolderShareCommandValidator>();
        validator.AddSingleton<CreateShiftCommandValidator>();
        validator.AddSingleton<CreateDocumentEditMappingRecordCommandValidator>();
        validator.AddSingleton<CreateShiftPlanCommandValidator>();
        validator.AddSingleton<UpdateShiftPlanCommandValidator>();
        validator.AddSingleton<DeleteShiftPlanCommandValidator>();
        validator.AddSingleton<CreateLibraryGroupCommandValidator>();
        validator.AddSingleton<GetHtmlFileIdFromObjectArtifactDocumentCommandValidator>();
        validator.AddSingleton<GenerateShiftPlanReportCommandValidator>();
        validator.AddSingleton<GenerateQuickTaskPlanReportCommandValidator>();
        validator.AddSingleton<GenerateShiftReportCommandValidator>();
        validator.AddSingleton<GenerateQuickTaskReportCommandValidator>();
        validator.AddSingleton<ProcessDraftedObjectArtifactDocumentCommandValidator>();
        validator.AddSingleton<GenerateLibraryReportCommandValidator>();
        validator.AddSingleton<LibraryDirectoryGetCommandValidator>();
        validator.AddSingleton<ObjectArtifactMoveCommandValidator>();
        validator.AddSingleton<DeleteShiftCommandValidator>();
        validator.AddSingleton<EditShiftCommandValidator>();
        validator.AddSingleton<AssignEquipmentAdminsCommandValidator>();
        validator.AddSingleton<ExportEquipmentMaintenanceListReportCommandValidator>();
        validator.AddSingleton<AssignProcessGuideForEquipmentCommandValidator>();
        validator.AddSingleton<ExportSuppliersReportCommandValidator>();
        validator.AddSingleton<GetRiqsTranslationCommandValidator>();
        validator.AddSingleton<LibraryFileVersionComparisonCommandValidator>();
        validator.AddCirsScrumboardCommandValidators();
        validator.AddSingleton<ExportLibraryDocumentAssigneeReportValidator>();
        validator.AddSingleton<DeleteCockpitObjectArtifactSummaryCommandValidator>();
        validator.AddSingleton<CreateReportTemplateCommandValidator>();
        validator.AddSingleton<CreateReportTemplateSectionCommandValidator>();
        validator.AddSingleton<PraxisReportTemplateSectionValidator>();
        validator.AddSingleton<CreateGeneratedReportTemplateConfigCommandValidator>();
        validator.AddSingleton<CreateGeneratedReportTemplateSectionValidator>();
        validator.AddSingleton<GeneratedReportTemplateSectionElementValidator>();
        validator.AddSingleton<AssignTemplateToEquipmentCommandValidator>();
        validator.AddSingleton<DeleteReportTemplateCommandValidator>();
        validator.AddSingleton<DeleteGeneratedReportTemplateConfigCommandValidator>();
        validator.AddSingleton<UpdateReportTemplateCommandValidator>();
        validator.AddSingleton<UpdateReportTemplateSectionCommandValidator>();
        validator.AddSingleton<UpdateGeneratedReportTemplateConfigCommandValidator>();
        validator.AddSingleton<UpdateGeneratedReportTemplateSectionCommandValidator>();
        validator.AddSingleton<GenerateValidationReportTemplatePdfCommandValidator>();
        validator.AddSingleton<CreateQuickTaskCommandValidator>();
        validator.AddSingleton<EditQuickTaskCommandValidator>();
        validator.AddSingleton<DeleteQuickTaskCommandValidator>();
        validator.AddSingleton<CreateQuickTaskPlanCommandValidator>();
        validator.AddSingleton<UpdateQuickTaskPlanCommandValidator>();
        validator.AddSingleton<DeleteQuickTaskPlanCommandValidator>();
        validator.AddSingleton<UpdateQuickTaskSequenceCommandValidator>();
        validator.AddSingleton<CreateAbsencePlanCommandValidator>();
        validator.AddSingleton<UpdateAbsencePlanCommandValidator>();
        validator.AddSingleton<DeleteAbsenceTypeCommandValidator>();
        validator.AddSingleton<DeleteAbsencePlanCommandValidator>();
        validator.AddSingleton<CreateAbsenceTypeCommandValidator>();
        validator.AddSingleton<UpdateAbsenceTypeCommandValidator>();
        validator.AddSingleton<UpdateAbsencePlanStatusCommandValidator>();
    }
}